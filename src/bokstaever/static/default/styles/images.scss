@use "sass:math";

// Modal for displaying images enlarged
.modal {
    background-color: rgba(0, 0, 0, 0.7);
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transition: visibility 0s linear 0.15s, opacity 0.15s 0s;
    z-index: 1000;
}

.show {
    opacity: 1;
    visibility: visible;
    transition: visibility 0s linear 0s, opacity 0.15s 0s;
}

@mixin modal-button {
    .btn {
        display: initial;
        border-style: none;
        position: absolute;
        font-size: 25px;
        top: 50%;
        background-color: white;
        cursor: pointer;

        &:disabled {
            cursor: initial;
        }

        &.next {
            right: 15px;
        }

        &.prev {
            left: 15px;
        }
    }
}

.modal-content {
    // close button for the modal
    .close {
        position: absolute;
        right: 10px;
        top: 10px;
        line-height: 3rem;
        width: 3rem;
        font-size: 3rem;
        text-align: center;
        cursor: pointer;
        background-color: white;
    }

    .btn {
        display: none;
    }

    // Only show next/prev buttons on hover
    @media (hover: hover) {
        &:hover {
            @include modal-button;
        }
    }

    // clicked class needs to be present to show buttons on mobile devices
    // class gets added via javascript
    @media (hover: none) {
        &.clicked {
            @include modal-button;
        }
    }

    // Position the content centered
    position: absolute;
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
    overflow: hidden;

    background-color: white;
    padding: 0;
    border-radius: 0.125rem;

    box-sizing: border-box;

    // Image dictates the size of the the modal
    img {
        width: initial;
        height: initial;
        object-fit: contain;

        max-height: 85vh;
        max-width: 90vw;

        @media screen and (min-width: 800px) {
            max-height: calc(85vh - 120px);
            max-width: calc(90vw - 120px);

            border: solid 60px white;
            border-bottom-width: 40px;
        }
    }

    .modal-footer {
        padding: 0 10px 4px 10px;
        display: flex;
        flex-flow: column;
        align-items: center;
        box-sizing: border-box;

        .image-date {
            color: rgba(0, 0, 0, 0.6);
        }
    }

    // Disable the footer if the height is less then 500px
    // Makes for larger images :)
    @media screen and (max-height: 500px) {
        .modal-footer {
            display: none;
        }

        background-color: transparent;

        img {
            border-radius: 0.125rem;
        }
    }
}

.images {
    display: flex;
    flex-wrap: wrap;

    img {
        flex-grow: 0 !important;
        // Images are clickable
        cursor: pointer;

        @mixin size($width) {
            flex: 1 0 calc(33.3333333% - #{$width});
            margin: math.div($width, 2);
            width: calc(33.3333333% - #{$width});
        }

        // Streched layouts
        @media screen and (min-width: 901px) {
            @include size(40px);
        }

        @media screen and (max-width: 900px) {
            @include size(3%);
        }

        // Tightly packed layout
        @media screen and (max-width: 700px) {
            @include size(1px);
        }

        // One image per row on mobile devices
        @media screen and (max-width: 450px) {
            flex: 1 0 calc(100% - 50px);
            margin: 5px 25px 5px 25px;
            width: calc(100% - 50px);
        }
    }

}

.btn {
    cursor: pointer;
    background-color: rgba(0,0,0,.07);
    border: none;
    font-size: 20px;
    padding: 5px 10px 5px 10px;

    &:disabled {
        opacity: 0.4;
        cursor: default;
    }
}

.pagination {
    display: flex;
    justify-content: center;

    .btn {
        margin: 5px;
    }
}